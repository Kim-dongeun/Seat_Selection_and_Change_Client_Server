//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 도구를 사용하여 생성되었습니다.
//     런타임 버전:4.0.30319.42000
//
//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//     이러한 변경 내용이 손실됩니다.
// </auto-generated>
//------------------------------------------------------------------------------

namespace 자리배치_클라이언트.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Student", Namespace="http://schemas.datacontract.org/2004/07/_0508_%EC%9E%90%EB%A6%AC%EB%B0%B0%EC%B9%9" +
        "8_%EC%84%9C%EB%B2%84")]
    [System.SerializableAttribute()]
    public partial class Student : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PWField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Sit_NumField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PW {
            get {
                return this.PWField;
            }
            set {
                if ((object.ReferenceEquals(this.PWField, value) != true)) {
                    this.PWField = value;
                    this.RaisePropertyChanged("PW");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sit_Num {
            get {
                return this.Sit_NumField;
            }
            set {
                if ((object.ReferenceEquals(this.Sit_NumField, value) != true)) {
                    this.Sit_NumField = value;
                    this.RaisePropertyChanged("Sit_Num");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IStudent", CallbackContract=typeof(자리배치_클라이언트.ServiceReference1.IStudentCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IStudent {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudent/AddMember", ReplyAction="http://tempuri.org/IStudent/AddMemberResponse")]
        bool AddMember(자리배치_클라이언트.ServiceReference1.Student student);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudent/AddMember", ReplyAction="http://tempuri.org/IStudent/AddMemberResponse")]
        System.Threading.Tasks.Task<bool> AddMemberAsync(자리배치_클라이언트.ServiceReference1.Student student);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudent/LogIn", ReplyAction="http://tempuri.org/IStudent/LogInResponse")]
        자리배치_클라이언트.ServiceReference1.Student LogIn(string id, string pw);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudent/LogIn", ReplyAction="http://tempuri.org/IStudent/LogInResponse")]
        System.Threading.Tasks.Task<자리배치_클라이언트.ServiceReference1.Student> LogInAsync(string id, string pw);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudent/Choose_Seat", ReplyAction="http://tempuri.org/IStudent/Choose_SeatResponse")]
        bool Choose_Seat(string id, string seat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudent/Choose_Seat", ReplyAction="http://tempuri.org/IStudent/Choose_SeatResponse")]
        System.Threading.Tasks.Task<bool> Choose_SeatAsync(string id, string seat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudent/PrintAll", ReplyAction="http://tempuri.org/IStudent/PrintAllResponse")]
        자리배치_클라이언트.ServiceReference1.Student[] PrintAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudent/PrintAll", ReplyAction="http://tempuri.org/IStudent/PrintAllResponse")]
        System.Threading.Tasks.Task<자리배치_클라이언트.ServiceReference1.Student[]> PrintAllAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IStudentCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IStudent/Join")]
        void Join(string id, string name);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IStudent/Update")]
        void Update(string sit_num, string name);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IStudentChannel : 자리배치_클라이언트.ServiceReference1.IStudent, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StudentClient : System.ServiceModel.DuplexClientBase<자리배치_클라이언트.ServiceReference1.IStudent>, 자리배치_클라이언트.ServiceReference1.IStudent {
        
        public StudentClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public StudentClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public StudentClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public StudentClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public StudentClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public bool AddMember(자리배치_클라이언트.ServiceReference1.Student student) {
            return base.Channel.AddMember(student);
        }
        
        public System.Threading.Tasks.Task<bool> AddMemberAsync(자리배치_클라이언트.ServiceReference1.Student student) {
            return base.Channel.AddMemberAsync(student);
        }
        
        public 자리배치_클라이언트.ServiceReference1.Student LogIn(string id, string pw) {
            return base.Channel.LogIn(id, pw);
        }
        
        public System.Threading.Tasks.Task<자리배치_클라이언트.ServiceReference1.Student> LogInAsync(string id, string pw) {
            return base.Channel.LogInAsync(id, pw);
        }
        
        public bool Choose_Seat(string id, string seat) {
            return base.Channel.Choose_Seat(id, seat);
        }
        
        public System.Threading.Tasks.Task<bool> Choose_SeatAsync(string id, string seat) {
            return base.Channel.Choose_SeatAsync(id, seat);
        }
        
        public 자리배치_클라이언트.ServiceReference1.Student[] PrintAll() {
            return base.Channel.PrintAll();
        }
        
        public System.Threading.Tasks.Task<자리배치_클라이언트.ServiceReference1.Student[]> PrintAllAsync() {
            return base.Channel.PrintAllAsync();
        }
    }
}
